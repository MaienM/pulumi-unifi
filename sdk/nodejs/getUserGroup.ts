// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * `unifi.UserGroup` data source can be used to retrieve the ID for a user group by name.
 */
export function getUserGroup(args?: GetUserGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetUserGroupResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("unifi:index/getUserGroup:getUserGroup", {
        "name": args.name,
        "site": args.site,
    }, opts);
}

/**
 * A collection of arguments for invoking getUserGroup.
 */
export interface GetUserGroupArgs {
    /**
     * The name of the user group to look up. Defaults to `Default`.
     */
    name?: string;
    /**
     * The name of the site the user group is associated with.
     */
    site?: string;
}

/**
 * A collection of values returned by getUserGroup.
 */
export interface GetUserGroupResult {
    /**
     * The ID of this AP group.
     */
    readonly id: string;
    /**
     * The name of the user group to look up. Defaults to `Default`.
     */
    readonly name?: string;
    readonly qosRateMaxDown: number;
    readonly qosRateMaxUp: number;
    /**
     * The name of the site the user group is associated with.
     */
    readonly site: string;
}

export function getUserGroupOutput(args?: GetUserGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserGroupResult> {
    return pulumi.output(args).apply(a => getUserGroup(a, opts))
}

/**
 * A collection of arguments for invoking getUserGroup.
 */
export interface GetUserGroupOutputArgs {
    /**
     * The name of the user group to look up. Defaults to `Default`.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the site the user group is associated with.
     */
    site?: pulumi.Input<string>;
}
