// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./device";
export * from "./dynamicDNS";
export * from "./getApGroup";
export * from "./getNetwork";
export * from "./getRadiusProfile";
export * from "./network";
export * from "./provider";
export * from "./site";
export * from "./staticRoute";
export * from "./wlan";

// Export sub-modules:
import * as config from "./config";
import * as firewall from "./firewall";
import * as iam from "./iam";
import * as port from "./port";
import * as setting from "./setting";
import * as types from "./types";

export {
    config,
    firewall,
    iam,
    port,
    setting,
    types,
};

// Import resources to register:
import { Device } from "./device";
import { DynamicDNS } from "./dynamicDNS";
import { Network } from "./network";
import { Site } from "./site";
import { StaticRoute } from "./staticRoute";
import { Wlan } from "./wlan";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "unifi:index/device:Device":
                return new Device(name, <any>undefined, { urn })
            case "unifi:index/dynamicDNS:DynamicDNS":
                return new DynamicDNS(name, <any>undefined, { urn })
            case "unifi:index/network:Network":
                return new Network(name, <any>undefined, { urn })
            case "unifi:index/site:Site":
                return new Site(name, <any>undefined, { urn })
            case "unifi:index/staticRoute:StaticRoute":
                return new StaticRoute(name, <any>undefined, { urn })
            case "unifi:index/wlan:Wlan":
                return new Wlan(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("unifi", "index/device", _module)
pulumi.runtime.registerResourceModule("unifi", "index/dynamicDNS", _module)
pulumi.runtime.registerResourceModule("unifi", "index/network", _module)
pulumi.runtime.registerResourceModule("unifi", "index/site", _module)
pulumi.runtime.registerResourceModule("unifi", "index/staticRoute", _module)
pulumi.runtime.registerResourceModule("unifi", "index/wlan", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("unifi", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:unifi") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
