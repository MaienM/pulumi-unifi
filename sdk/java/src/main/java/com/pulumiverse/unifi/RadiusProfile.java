// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.unifi.RadiusProfileArgs;
import com.pulumiverse.unifi.Utilities;
import com.pulumiverse.unifi.inputs.RadiusProfileState;
import com.pulumiverse.unifi.outputs.RadiusProfileAcctServer;
import com.pulumiverse.unifi.outputs.RadiusProfileAuthServer;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `unifi.RadiusProfile` manages RADIUS profiles.
 * 
 */
@ResourceType(type="unifi:index/radiusProfile:RadiusProfile")
public class RadiusProfile extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether to use RADIUS accounting. Defaults to `false`.
     * 
     */
    @Export(name="accountingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountingEnabled;

    /**
     * @return Specifies whether to use RADIUS accounting. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> accountingEnabled() {
        return Codegen.optional(this.accountingEnabled);
    }
    /**
     * RADIUS accounting servers.
     * 
     */
    @Export(name="acctServers", refs={List.class,RadiusProfileAcctServer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RadiusProfileAcctServer>> acctServers;

    /**
     * @return RADIUS accounting servers.
     * 
     */
    public Output<Optional<List<RadiusProfileAcctServer>>> acctServers() {
        return Codegen.optional(this.acctServers);
    }
    /**
     * RADIUS authentication servers.
     * 
     */
    @Export(name="authServers", refs={List.class,RadiusProfileAuthServer.class}, tree="[0,1]")
    private Output</* @Nullable */ List<RadiusProfileAuthServer>> authServers;

    /**
     * @return RADIUS authentication servers.
     * 
     */
    public Output<Optional<List<RadiusProfileAuthServer>>> authServers() {
        return Codegen.optional(this.authServers);
    }
    /**
     * Specifies whether to use interim_update. Defaults to `false`.
     * 
     */
    @Export(name="interimUpdateEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> interimUpdateEnabled;

    /**
     * @return Specifies whether to use interim_update. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> interimUpdateEnabled() {
        return Codegen.optional(this.interimUpdateEnabled);
    }
    /**
     * Specifies interim_update interval. Defaults to `3600`.
     * 
     */
    @Export(name="interimUpdateInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interimUpdateInterval;

    /**
     * @return Specifies interim_update interval. Defaults to `3600`.
     * 
     */
    public Output<Optional<Integer>> interimUpdateInterval() {
        return Codegen.optional(this.interimUpdateInterval);
    }
    /**
     * The name of the profile.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the profile.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The name of the site to associate the settings with.
     * 
     */
    @Export(name="site", refs={String.class}, tree="[0]")
    private Output<String> site;

    /**
     * @return The name of the site to associate the settings with.
     * 
     */
    public Output<String> site() {
        return this.site;
    }
    /**
     * Specifies whether to use usg as a RADIUS accounting server. Defaults to `false`.
     * 
     */
    @Export(name="useUsgAcctServer", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useUsgAcctServer;

    /**
     * @return Specifies whether to use usg as a RADIUS accounting server. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> useUsgAcctServer() {
        return Codegen.optional(this.useUsgAcctServer);
    }
    /**
     * Specifies whether to use usg as a RADIUS authentication server. Defaults to `false`.
     * 
     */
    @Export(name="useUsgAuthServer", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> useUsgAuthServer;

    /**
     * @return Specifies whether to use usg as a RADIUS authentication server. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> useUsgAuthServer() {
        return Codegen.optional(this.useUsgAuthServer);
    }
    /**
     * Specifies whether to use vlan on wired connections. Defaults to `false`.
     * 
     */
    @Export(name="vlanEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> vlanEnabled;

    /**
     * @return Specifies whether to use vlan on wired connections. Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> vlanEnabled() {
        return Codegen.optional(this.vlanEnabled);
    }
    /**
     * Specifies whether to use vlan on wireless connections. Must be one of `disabled`, `optional`, or `required`. Defaults to ``.
     * 
     */
    @Export(name="vlanWlanMode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> vlanWlanMode;

    /**
     * @return Specifies whether to use vlan on wireless connections. Must be one of `disabled`, `optional`, or `required`. Defaults to ``.
     * 
     */
    public Output<Optional<String>> vlanWlanMode() {
        return Codegen.optional(this.vlanWlanMode);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RadiusProfile(String name) {
        this(name, RadiusProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RadiusProfile(String name, @Nullable RadiusProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RadiusProfile(String name, @Nullable RadiusProfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:index/radiusProfile:RadiusProfile", name, args == null ? RadiusProfileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RadiusProfile(String name, Output<String> id, @Nullable RadiusProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:index/radiusProfile:RadiusProfile", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RadiusProfile get(String name, Output<String> id, @Nullable RadiusProfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RadiusProfile(name, id, state, options);
    }
}
