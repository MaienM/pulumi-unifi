// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi.setting;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumiverse.unifi.Utilities;
import com.pulumiverse.unifi.setting.RadiusArgs;
import com.pulumiverse.unifi.setting.inputs.RadiusState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `unifi.setting.Radius` manages settings for the built-in RADIUS server.
 * 
 */
@ResourceType(type="unifi:setting/radius:Radius")
public class Radius extends com.pulumi.resources.CustomResource {
    /**
     * Enable RADIUS accounting Defaults to `false`.
     * 
     */
    @Export(name="accountingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> accountingEnabled;

    /**
     * @return Enable RADIUS accounting Defaults to `false`.
     * 
     */
    public Output<Optional<Boolean>> accountingEnabled() {
        return Codegen.optional(this.accountingEnabled);
    }
    /**
     * The port for accounting communications. Defaults to `1813`.
     * 
     */
    @Export(name="accountingPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> accountingPort;

    /**
     * @return The port for accounting communications. Defaults to `1813`.
     * 
     */
    public Output<Optional<Integer>> accountingPort() {
        return Codegen.optional(this.accountingPort);
    }
    /**
     * The port for authentication communications. Defaults to `1812`.
     * 
     */
    @Export(name="authPort", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> authPort;

    /**
     * @return The port for authentication communications. Defaults to `1812`.
     * 
     */
    public Output<Optional<Integer>> authPort() {
        return Codegen.optional(this.authPort);
    }
    /**
     * RAIDUS server enabled. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return RAIDUS server enabled. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * Statistics will be collected from connected clients at this interval. Defaults to `3600`.
     * 
     */
    @Export(name="interimUpdateInterval", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> interimUpdateInterval;

    /**
     * @return Statistics will be collected from connected clients at this interval. Defaults to `3600`.
     * 
     */
    public Output<Optional<Integer>> interimUpdateInterval() {
        return Codegen.optional(this.interimUpdateInterval);
    }
    /**
     * RAIDUS secret passphrase. Defaults to ``.
     * 
     */
    @Export(name="secret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secret;

    /**
     * @return RAIDUS secret passphrase. Defaults to ``.
     * 
     */
    public Output<Optional<String>> secret() {
        return Codegen.optional(this.secret);
    }
    /**
     * The name of the site to associate the settings with.
     * 
     */
    @Export(name="site", refs={String.class}, tree="[0]")
    private Output<String> site;

    /**
     * @return The name of the site to associate the settings with.
     * 
     */
    public Output<String> site() {
        return this.site;
    }
    /**
     * Encrypt communication between the server and the client. Defaults to `true`.
     * 
     */
    @Export(name="tunneledReply", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> tunneledReply;

    /**
     * @return Encrypt communication between the server and the client. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> tunneledReply() {
        return Codegen.optional(this.tunneledReply);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Radius(String name) {
        this(name, RadiusArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Radius(String name, @Nullable RadiusArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Radius(String name, @Nullable RadiusArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:setting/radius:Radius", name, args == null ? RadiusArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Radius(String name, Output<String> id, @Nullable RadiusState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("unifi:setting/radius:Radius", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Radius get(String name, Output<String> id, @Nullable RadiusState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Radius(name, id, state, options);
    }
}
