// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountResult {
    /**
     * @return The ID of this account.
     * 
     */
    private String id;
    /**
     * @return The name of the account to look up
     * 
     */
    private String name;
    /**
     * @return ID of the network for this account
     * 
     */
    private String networkId;
    /**
     * @return The password of the account.
     * 
     */
    private String password;
    /**
     * @return The name of the site the account is associated with.
     * 
     */
    private String site;
    /**
     * @return See RFC2868 section 3.2
     * 
     */
    private Integer tunnelMediumType;
    /**
     * @return See RFC2868 section 3.1
     * 
     */
    private Integer tunnelType;

    private GetAccountResult() {}
    /**
     * @return The ID of this account.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the account to look up
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return ID of the network for this account
     * 
     */
    public String networkId() {
        return this.networkId;
    }
    /**
     * @return The password of the account.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return The name of the site the account is associated with.
     * 
     */
    public String site() {
        return this.site;
    }
    /**
     * @return See RFC2868 section 3.2
     * 
     */
    public Integer tunnelMediumType() {
        return this.tunnelMediumType;
    }
    /**
     * @return See RFC2868 section 3.1
     * 
     */
    public Integer tunnelType() {
        return this.tunnelType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String networkId;
        private String password;
        private String site;
        private Integer tunnelMediumType;
        private Integer tunnelType;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.networkId = defaults.networkId;
    	      this.password = defaults.password;
    	      this.site = defaults.site;
    	      this.tunnelMediumType = defaults.tunnelMediumType;
    	      this.tunnelType = defaults.tunnelType;
        }

        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder networkId(String networkId) {
            this.networkId = Objects.requireNonNull(networkId);
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        @CustomType.Setter
        public Builder site(String site) {
            this.site = Objects.requireNonNull(site);
            return this;
        }
        @CustomType.Setter
        public Builder tunnelMediumType(Integer tunnelMediumType) {
            this.tunnelMediumType = Objects.requireNonNull(tunnelMediumType);
            return this;
        }
        @CustomType.Setter
        public Builder tunnelType(Integer tunnelType) {
            this.tunnelType = Objects.requireNonNull(tunnelType);
            return this;
        }
        public GetAccountResult build() {
            final var o = new GetAccountResult();
            o.id = id;
            o.name = name;
            o.networkId = networkId;
            o.password = password;
            o.site = site;
            o.tunnelMediumType = tunnelMediumType;
            o.tunnelType = tunnelType;
            return o;
        }
    }
}
