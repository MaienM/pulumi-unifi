// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AccountState extends com.pulumi.resources.ResourceArgs {

    public static final AccountState Empty = new AccountState();

    /**
     * The name of the account.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the account.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of the network for this account
     * 
     */
    @Import(name="networkId")
    private @Nullable Output<String> networkId;

    /**
     * @return ID of the network for this account
     * 
     */
    public Optional<Output<String>> networkId() {
        return Optional.ofNullable(this.networkId);
    }

    /**
     * The password of the account.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The password of the account.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The name of the site to associate the account with.
     * 
     */
    @Import(name="site")
    private @Nullable Output<String> site;

    /**
     * @return The name of the site to associate the account with.
     * 
     */
    public Optional<Output<String>> site() {
        return Optional.ofNullable(this.site);
    }

    /**
     * See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.2 Defaults to `6`.
     * 
     */
    @Import(name="tunnelMediumType")
    private @Nullable Output<Integer> tunnelMediumType;

    /**
     * @return See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.2 Defaults to `6`.
     * 
     */
    public Optional<Output<Integer>> tunnelMediumType() {
        return Optional.ofNullable(this.tunnelMediumType);
    }

    /**
     * See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.1 Defaults to `13`.
     * 
     */
    @Import(name="tunnelType")
    private @Nullable Output<Integer> tunnelType;

    /**
     * @return See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.1 Defaults to `13`.
     * 
     */
    public Optional<Output<Integer>> tunnelType() {
        return Optional.ofNullable(this.tunnelType);
    }

    private AccountState() {}

    private AccountState(AccountState $) {
        this.name = $.name;
        this.networkId = $.networkId;
        this.password = $.password;
        this.site = $.site;
        this.tunnelMediumType = $.tunnelMediumType;
        this.tunnelType = $.tunnelType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AccountState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AccountState $;

        public Builder() {
            $ = new AccountState();
        }

        public Builder(AccountState defaults) {
            $ = new AccountState(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the account.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the account.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkId ID of the network for this account
         * 
         * @return builder
         * 
         */
        public Builder networkId(@Nullable Output<String> networkId) {
            $.networkId = networkId;
            return this;
        }

        /**
         * @param networkId ID of the network for this account
         * 
         * @return builder
         * 
         */
        public Builder networkId(String networkId) {
            return networkId(Output.of(networkId));
        }

        /**
         * @param password The password of the account.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The password of the account.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param site The name of the site to associate the account with.
         * 
         * @return builder
         * 
         */
        public Builder site(@Nullable Output<String> site) {
            $.site = site;
            return this;
        }

        /**
         * @param site The name of the site to associate the account with.
         * 
         * @return builder
         * 
         */
        public Builder site(String site) {
            return site(Output.of(site));
        }

        /**
         * @param tunnelMediumType See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.2 Defaults to `6`.
         * 
         * @return builder
         * 
         */
        public Builder tunnelMediumType(@Nullable Output<Integer> tunnelMediumType) {
            $.tunnelMediumType = tunnelMediumType;
            return this;
        }

        /**
         * @param tunnelMediumType See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.2 Defaults to `6`.
         * 
         * @return builder
         * 
         */
        public Builder tunnelMediumType(Integer tunnelMediumType) {
            return tunnelMediumType(Output.of(tunnelMediumType));
        }

        /**
         * @param tunnelType See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.1 Defaults to `13`.
         * 
         * @return builder
         * 
         */
        public Builder tunnelType(@Nullable Output<Integer> tunnelType) {
            $.tunnelType = tunnelType;
            return this;
        }

        /**
         * @param tunnelType See [RFC 2868](https://www.rfc-editor.org/rfc/rfc2868) section 3.1 Defaults to `13`.
         * 
         * @return builder
         * 
         */
        public Builder tunnelType(Integer tunnelType) {
            return tunnelType(Output.of(tunnelType));
        }

        public AccountState build() {
            return $;
        }
    }

}
