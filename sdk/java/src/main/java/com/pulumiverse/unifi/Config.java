// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi;

import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("unifi");
/**
 * Skip verification of TLS certificates of API requests. You may need to set this to `true` if you are using your local
 * API without setting up a signed certificate. Can be specified with the `UNIFI_INSECURE` environment variable.
 * 
 */
    public Optional<Boolean> allowInsecure() {
        return Codegen.booleanProp("allowInsecure").config(config).env("UNIFI_INSECURE").get();
    }
/**
 * URL of the controller API. Can be specified with the `UNIFI_API` environment variable. You should **NOT** supply the
 * path (`/api`), the SDK will discover the appropriate paths. This is to support UDM Pro style API paths as well as more
 * standard controller paths.
 * 
 */
    public String apiUrl() {
        return Codegen.stringProp("apiUrl").config(config).env("UNIFI_API").require();
    }
/**
 * Password for the user accessing the API. Can be specified with the `UNIFI_PASSWORD` environment variable.
 * 
 */
    public String password() {
        return Codegen.stringProp("password").config(config).env("UNIFI_PASSWORD").require();
    }
/**
 * The site in the Unifi controller this provider will manage. Can be specified with the `UNIFI_SITE` environment variable.
 * Default: `default`
 * 
 */
    public String site() {
        return Codegen.stringProp("site").config(config).env("UNIFI_SITE").require();
    }
/**
 * Local user name for the Unifi controller API. Can be specified with the `UNIFI_USERNAME` environment variable.
 * 
 */
    public String username() {
        return Codegen.stringProp("username").config(config).env("UNIFI_USERNAME").require();
    }
}
