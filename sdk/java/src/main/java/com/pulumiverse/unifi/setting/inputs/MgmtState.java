// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumiverse.unifi.setting.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumiverse.unifi.setting.inputs.MgmtSshKeyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MgmtState extends com.pulumi.resources.ResourceArgs {

    public static final MgmtState Empty = new MgmtState();

    /**
     * Automatically upgrade device firmware.
     * 
     */
    @Import(name="autoUpgrade")
    private @Nullable Output<Boolean> autoUpgrade;

    /**
     * @return Automatically upgrade device firmware.
     * 
     */
    public Optional<Output<Boolean>> autoUpgrade() {
        return Optional.ofNullable(this.autoUpgrade);
    }

    /**
     * The name of the site to associate the settings with.
     * 
     */
    @Import(name="site")
    private @Nullable Output<String> site;

    /**
     * @return The name of the site to associate the settings with.
     * 
     */
    public Optional<Output<String>> site() {
        return Optional.ofNullable(this.site);
    }

    /**
     * Enable SSH authentication.
     * 
     */
    @Import(name="sshEnabled")
    private @Nullable Output<Boolean> sshEnabled;

    /**
     * @return Enable SSH authentication.
     * 
     */
    public Optional<Output<Boolean>> sshEnabled() {
        return Optional.ofNullable(this.sshEnabled);
    }

    /**
     * SSH key.
     * 
     */
    @Import(name="sshKeys")
    private @Nullable Output<List<MgmtSshKeyArgs>> sshKeys;

    /**
     * @return SSH key.
     * 
     */
    public Optional<Output<List<MgmtSshKeyArgs>>> sshKeys() {
        return Optional.ofNullable(this.sshKeys);
    }

    private MgmtState() {}

    private MgmtState(MgmtState $) {
        this.autoUpgrade = $.autoUpgrade;
        this.site = $.site;
        this.sshEnabled = $.sshEnabled;
        this.sshKeys = $.sshKeys;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MgmtState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MgmtState $;

        public Builder() {
            $ = new MgmtState();
        }

        public Builder(MgmtState defaults) {
            $ = new MgmtState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autoUpgrade Automatically upgrade device firmware.
         * 
         * @return builder
         * 
         */
        public Builder autoUpgrade(@Nullable Output<Boolean> autoUpgrade) {
            $.autoUpgrade = autoUpgrade;
            return this;
        }

        /**
         * @param autoUpgrade Automatically upgrade device firmware.
         * 
         * @return builder
         * 
         */
        public Builder autoUpgrade(Boolean autoUpgrade) {
            return autoUpgrade(Output.of(autoUpgrade));
        }

        /**
         * @param site The name of the site to associate the settings with.
         * 
         * @return builder
         * 
         */
        public Builder site(@Nullable Output<String> site) {
            $.site = site;
            return this;
        }

        /**
         * @param site The name of the site to associate the settings with.
         * 
         * @return builder
         * 
         */
        public Builder site(String site) {
            return site(Output.of(site));
        }

        /**
         * @param sshEnabled Enable SSH authentication.
         * 
         * @return builder
         * 
         */
        public Builder sshEnabled(@Nullable Output<Boolean> sshEnabled) {
            $.sshEnabled = sshEnabled;
            return this;
        }

        /**
         * @param sshEnabled Enable SSH authentication.
         * 
         * @return builder
         * 
         */
        public Builder sshEnabled(Boolean sshEnabled) {
            return sshEnabled(Output.of(sshEnabled));
        }

        /**
         * @param sshKeys SSH key.
         * 
         * @return builder
         * 
         */
        public Builder sshKeys(@Nullable Output<List<MgmtSshKeyArgs>> sshKeys) {
            $.sshKeys = sshKeys;
            return this;
        }

        /**
         * @param sshKeys SSH key.
         * 
         * @return builder
         * 
         */
        public Builder sshKeys(List<MgmtSshKeyArgs> sshKeys) {
            return sshKeys(Output.of(sshKeys));
        }

        /**
         * @param sshKeys SSH key.
         * 
         * @return builder
         * 
         */
        public Builder sshKeys(MgmtSshKeyArgs... sshKeys) {
            return sshKeys(List.of(sshKeys));
        }

        public MgmtState build() {
            return $;
        }
    }

}
