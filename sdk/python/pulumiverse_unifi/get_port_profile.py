# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetPortProfileResult',
    'AwaitableGetPortProfileResult',
    'get_port_profile',
    'get_port_profile_output',
]

@pulumi.output_type
class GetPortProfileResult:
    """
    A collection of values returned by getPortProfile.
    """
    def __init__(__self__, id=None, name=None, site=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if site and not isinstance(site, str):
            raise TypeError("Expected argument 'site' to be a str")
        pulumi.set(__self__, "site", site)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The ID of this port profile.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        The name of the port profile to look up. Defaults to `All`.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def site(self) -> str:
        """
        The name of the site the port profile is associated with.
        """
        return pulumi.get(self, "site")


class AwaitableGetPortProfileResult(GetPortProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPortProfileResult(
            id=self.id,
            name=self.name,
            site=self.site)


def get_port_profile(name: Optional[str] = None,
                     site: Optional[str] = None,
                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPortProfileResult:
    """
    `PortProfile` data source can be used to retrieve the ID for a port profile by name.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_unifi as unifi

    all = unifi.get_port_profile()
    ```


    :param str name: The name of the port profile to look up. Defaults to `All`.
    :param str site: The name of the site the port profile is associated with.
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['site'] = site
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('unifi:index/getPortProfile:getPortProfile', __args__, opts=opts, typ=GetPortProfileResult).value

    return AwaitableGetPortProfileResult(
        id=__ret__.id,
        name=__ret__.name,
        site=__ret__.site)


@_utilities.lift_output_func(get_port_profile)
def get_port_profile_output(name: Optional[pulumi.Input[Optional[str]]] = None,
                            site: Optional[pulumi.Input[Optional[str]]] = None,
                            opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPortProfileResult]:
    """
    `PortProfile` data source can be used to retrieve the ID for a port profile by name.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_unifi as unifi

    all = unifi.get_port_profile()
    ```


    :param str name: The name of the port profile to look up. Defaults to `All`.
    :param str site: The name of the site the port profile is associated with.
    """
    ...
