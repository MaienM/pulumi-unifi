// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package unifi

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `UserGroup` data source can be used to retrieve the ID for a user group by name.
func LookupUserGroup(ctx *pulumi.Context, args *LookupUserGroupArgs, opts ...pulumi.InvokeOption) (*LookupUserGroupResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv LookupUserGroupResult
	err := ctx.Invoke("unifi:index/getUserGroup:getUserGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroup.
type LookupUserGroupArgs struct {
	// The name of the user group to look up. Defaults to `Default`.
	Name *string `pulumi:"name"`
	// The name of the site the user group is associated with.
	Site *string `pulumi:"site"`
}

// A collection of values returned by getUserGroup.
type LookupUserGroupResult struct {
	// The ID of this AP group.
	Id string `pulumi:"id"`
	// The name of the user group to look up. Defaults to `Default`.
	Name           *string `pulumi:"name"`
	QosRateMaxDown int     `pulumi:"qosRateMaxDown"`
	QosRateMaxUp   int     `pulumi:"qosRateMaxUp"`
	// The name of the site the user group is associated with.
	Site string `pulumi:"site"`
}

func LookupUserGroupOutput(ctx *pulumi.Context, args LookupUserGroupOutputArgs, opts ...pulumi.InvokeOption) LookupUserGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserGroupResult, error) {
			args := v.(LookupUserGroupArgs)
			r, err := LookupUserGroup(ctx, &args, opts...)
			var s LookupUserGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserGroupResultOutput)
}

// A collection of arguments for invoking getUserGroup.
type LookupUserGroupOutputArgs struct {
	// The name of the user group to look up. Defaults to `Default`.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The name of the site the user group is associated with.
	Site pulumi.StringPtrInput `pulumi:"site"`
}

func (LookupUserGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserGroupArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroup.
type LookupUserGroupResultOutput struct{ *pulumi.OutputState }

func (LookupUserGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserGroupResult)(nil)).Elem()
}

func (o LookupUserGroupResultOutput) ToLookupUserGroupResultOutput() LookupUserGroupResultOutput {
	return o
}

func (o LookupUserGroupResultOutput) ToLookupUserGroupResultOutputWithContext(ctx context.Context) LookupUserGroupResultOutput {
	return o
}

// The ID of this AP group.
func (o LookupUserGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the user group to look up. Defaults to `Default`.
func (o LookupUserGroupResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserGroupResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupUserGroupResultOutput) QosRateMaxDown() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserGroupResult) int { return v.QosRateMaxDown }).(pulumi.IntOutput)
}

func (o LookupUserGroupResultOutput) QosRateMaxUp() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserGroupResult) int { return v.QosRateMaxUp }).(pulumi.IntOutput)
}

// The name of the site the user group is associated with.
func (o LookupUserGroupResultOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupResult) string { return v.Site }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserGroupResultOutput{})
}
